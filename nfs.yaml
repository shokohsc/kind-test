apiVersion: v1
kind: ReplicationController
metadata:
  name: nfs-server
spec:
  replicas: 1
  selector:
    role: nfs-server
  template:
    metadata:
      labels:
        role: nfs-server
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: overwatch
                operator: In
                values:
                - sombra
      containers:
      #- env:
       # - name: SHARED_DIRECTORY
        #  value: /nfsshare
      - name: nfs-server
        image: k8s.gcr.io/volume-nfs:0.8
        ports:
          - name: nfs
            containerPort: 2049
          - name: mountd
            containerPort: 20048
          - name: rpcbind
            containerPort: 111
        securityContext:
          privileged: true
        volumeMounts:
          - mountPath: /exports
            name: data
      volumes:
        - name: data
          hostPath:
            path: /data
          # persistentVolumeClaim:
            # claimName: rook-nfs-pv-claim
            # claimName: nfs-pv-provisioning-demo
---
kind: Service
apiVersion: v1
metadata:
  name: nfs-service
spec:
  ports:
    - name: nfs
      port: 2049
  selector:
    role: nfs-server
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: nfs-pv-provisioning-demo
#   labels:
#     demo: nfs-pv-provisioning
# spec:
#   accessModes: [ "ReadWriteOnce" ]
#   resources:
#     requests:
#       storage: 1Mi
