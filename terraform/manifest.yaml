---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik
  namespace: traefik
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`traefik.kind.shokohsc.home`)
      kind: Rule
      services:
        - name: api@internal
          kind: TraefikService

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  creationTimestamp: null
  name: linkerd
  namespace: linkerd
spec:
  entryPoints: []
  routes:
  - kind: Rule
    match: Host(`linkerd.kind.shokohsc.home`)
    priority: 0
    services:
    - kind: Service
      name: linkerd-web
      port: 8084

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  creationTimestamp: null
  name: adminer
  namespace: adminer
spec:
  entryPoints: []
  routes:
  - kind: Rule
    match: Host(`adminer.kind.shokohsc.home`)
    priority: 0
    services:
    - kind: Service
      name: adminer
      port: 80

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  creationTimestamp: null
  name: argocd
  namespace: argocd
spec:
  entryPoints: []
  routes:
  - kind: Rule
    match: Host(`argocd.kind.shokohsc.home`)
    priority: 0
    services:
    - kind: Service
      name: argocd-server
      port: 80

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  creationTimestamp: null
  name: dashboard
  namespace: dashboard
spec:
  entryPoints: []
  routes:
  - kind: Rule
    match: Host(`dashboard.kind.shokohsc.home`)
    priority: 0
    services:
    - kind: Service
      name: kubernetes-dashboard
      port: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: dashboard
---
# kubectl -n dashboard describe secret $(kubectl -n dashboard get secret | grep admin-user | awk '{print $1}')
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: dashboard