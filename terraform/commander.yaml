---
apiVersion: v1
kind: Namespace
metadata:
  name: commander
  annotations:
    linkerd.io/inject: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: commander
  name: commander
  namespace: commander
spec:
  replicas: 1
  selector:
    matchLabels:
      app: commander
  template:
    metadata:
      labels:
        app: commander
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: overwatch
                operator: NotIn
                values:
                - sombra
      hostname: commander
      initContainers:
      - name: myapp-container
        image: busybox:1.28
        command: ['nslookup', 'nfs.nfs.svc.cluster.local']
      containers:
      - image: coderaiser/cloudcmd
        name: commander
        volumeMounts:
            - name: wd1to
              mountPath: "/root/media/WD1To"
            - name: wd2to
              mountPath: "/root/media/WD2To"
      volumes:
      - name: wd1to
        nfs: 
          server: nfs.nfs.svc.cluster.local
          path: /exports/WD1To
      - name: wd2to
        nfs: 
          server: nfs.nfs.svc.cluster.local
          path: /exports/WD2To
---
kind: Service
apiVersion: v1
metadata:
  name: commander
  namespace: commander
spec:
  ports:
    - port: 8000
      targetPort: 8000
  selector:
    app: commander
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  creationTimestamp: null
  name: commander
  namespace: commander
spec:
  entryPoints:
    - web
  routes:
  - kind: Rule
    match: Host(`commander.kind.shokohsc.home`)
    priority: 0
    services:
    - kind: Service
      name: commander
      port: 8000
