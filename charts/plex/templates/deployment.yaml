apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "plex.fullname" . }}
  labels:
    {{- include "plex.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "plex.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "plex.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "plex.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- range $key, $value := .Values.envVars }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - name: http
              containerPort: 32400
              protocol: TCP
            {{- range $port := .Values.extraPorts }}
            - name: {{ $port.name }}
              containerPort: {{ $port.containerPort }}
              protocol: {{ $port.protocol | upper }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- range $volume := .Values.extraVolumes }}
            - name: {{ $volume.name }}
              mountPath: {{ $volume.mountPath }}
            {{- end }}
            {{- range $nfs := .Values.nfsVolumes }}
            - name: {{ $nfs.name }}
              mountPath: {{ $nfs.mountPath }}
              {{- if $nfs.subPath }}
              subPath: {{ $nfs.subPath }}
              {{- end }}
              readOnly: false
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- range $volume := .Values.extraVolumes }}
        - name: {{ $volume.name }}
          persistentVolumeClaim:
            claimName: {{ include "plex.fullname" . }}-{{ $volume.name }}
        {{- end }}
        {{- range $nfs := .Values.nfsVolumes }}
        - name: {{ $nfs.name }}
          nfs:
            server: {{ $nfs.server }}
            path: {{ $nfs.path }}
          {{- if $nfs.mountOptions }}
          mountOptions:
            {{- range $option := $nfs.mountOptions }}
            - {{ $option }}
            {{- end }}
          {{- end }}
        {{- end }}
