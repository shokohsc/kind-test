kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user app;
    worker_processes auto;
    pid /run/nginx.pid;

    events {
      worker_connections  2048;
      multi_accept on;
      use epoll;
    }

    http {
      server_tokens off;
      sendfile on;

      tcp_nopush on;
      tcp_nodelay on;

      keepalive_timeout 15;
      types_hash_max_size 2048;

      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      access_log off;
      error_log /var/log/nginx/error.log;

      gzip_vary on;
      gzip_proxied any;
      gzip_comp_level 6;
      gzip_buffers 16 8k;
      gzip_http_version 1.1;
      gzip_types text/plain text/css application/json application/x-javascript
                 text/xml application/xml application/xml+rss text/javascript;

      include /etc/nginx/conf.d/*.conf;

      open_file_cache max=100;
      client_max_body_size 2G;

      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
    }

  symfony.conf: |
    server {

        root /var/www/symfony/public;

        # Used to get the real client ip, we are behind a loadbalancer
        set_real_ip_from 0.0.0.0/0;
        real_ip_header X-Real-IP;
        real_ip_recursive on;


        location / {
            try_files $uri @rewriteapp;
        }

        location @rewriteapp {
            rewrite ^(.*)$ /index.php/$1 last;
        }

        location ~ ^/(index)\.php(/|$) {
            fastcgi_pass localhost:9000;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param HTTPS off;
            fastcgi_read_timeout 600;
        }

        error_log /dev/stderr;
        access_log /dev/stdout;
    }
