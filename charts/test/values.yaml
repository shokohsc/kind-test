# Default values for pihole.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# replicaCount -- pods replica count
replicaCount: 1

image:
  # image.repository -- container image repository
  repository: pihole/pihole
  # image.pullPolicy -- container image pull policy
  pullPolicy: IfNotPresent
  # image.tag -- container image tag or Chart appVersion if undefined
  tag: ""

# imagePullSecrets -- registry secret
imagePullSecrets: []
# nameOverride -- release name override option
nameOverride: ""
# fullnameOverride -- release full release name override option
fullnameOverride: ""

# podAnnotations -- Pod annotations
podAnnotations: {}

# podSecurityContext -- Pod security group context
podSecurityContext: {}
  # fsGroup: 2000

# securityContext -- Deployment security group context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # service.type -- Service type
  type: ClusterIP
  # service.port -- Pihole web port
  port: 80
  # Annotations to add to the service
  # service.annotations -- Service annotations
  annotations: {}

# resources -- pod resource requests & limits
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# nodeSelector -- node labels for pod assignment
nodeSelector: {}

# tolerations -- node taints to tolerate (requires Kubernetes >=1.6)
tolerations: []

# affinity -- node/pod affinities (requires Kubernetes >=1.6)
affinity: {}

# timezone -- timezone i.e Europe/Paris
timezone: UTC
# virtualHost -- Pihole virtual host
virtualHost: chart-example.local

# Probes configuration
probes:
  # probes.liveness -- Configure the healthcheck for the ingress controller
  liveness:
    enabled: true
    initialDelaySeconds: 60
    failureThreshold: 10
    timeoutSeconds: 5
  # probes.readiness -- Configure the healthcheck for the ingress controller
  readiness:
    enabled: true
    initialDelaySeconds: 60
    failureThreshold: 3
    timeoutSeconds: 5

dns:
  service:
    # dns.service.type -- DNS service type
    type: ClusterIP
    # Annotations to add to the service
    # dns.service.annotations -- DNS service annotations
    annotations: {}

dhcp:
  # dhcp.enabled -- DHCP functionality toggle
  enabled: false
  service:
    # dhcp.service.type -- DHCP service type
    type: ClusterIP
    # Annotations to add to the service
    # dhcp.service.annotations -- DHCP service annotations
    annotations: {}
  image:
    # dhcp.image.repository -- DHCP image repository
    repository: shokohsc/dhcp-relay
    # dhcp.image.tag -- DHCP image tag
    tag: "latest"

doh:
  # doh.enabled -- DNS over https functionality toggle
  enabled: false
  service:
    # doh.service.type -- DNS over https service type
    type: ClusterIP
    # Annotations to add to the service
    # doh.service.annotations -- DNS over https service annotations
    annotations: {}
  image:
    # doh.image.repository -- DNS over https image repository
    repository: crazymax/cloudflared
    # doh.image.tag -- DNS over https image tag
    tag: "latest"
  # doh.upstream -- DNS over https upstream server
  upstream: https://1.1.1.1/dns-query

# adminPassword -- Administrator password when not using an existing secret (see below)
adminPassword: "admin"

admin:
  # admin.existingSecret -- Use an existing secret for the admin password.
  existingSecret: ""
  # admin.passwordKey -- secret key
  passwordKey: "password"

# extraEnvVars -- extraEnvironmentVars is a list of extra enviroment variables to set for pihole to use
# https://github.com/pi-hole/docker-pi-hole/tree/v5.1.2#environment-variables
extraEnvVars: {}
  # TZ: UTC

dnsmasq:
  # dnsmasq.upstreamServers -- upstream dns servers
  upstreamServers: []
  # Here you can add upstream dns servers with. All lines will be added to the
  # pihole dnsmasq configuration.
  # The format should be like:
  # - server=/foo.bar/192.168.178.10
  # - server=/bar.foo/192.168.178.11

  # dnsmasq.customDnsEntries -- custom dns entries
  customDnsEntries: []
  # Here you can add custom dns entries to override the
  # dns resolution with. All lines will be added to the
  # pihole dnsmasq configuration.
  # The format should be like:
  # - address=/foo.bar/192.168.178.10
  # - address=/bar.foo/192.168.178.11

  # dnsmasq.additionalHostsEntries -- additional host entries
  additionalHostsEntries: []
  # Dnsmasq reads the /etc/hosts file to resolve ips. You can add additional entries if you like
  # - 192.168.0.3     host4
  # - 192.168.0.4     host5


# adlists -- blocklists
adlists: {}
  # If you want to provide blocklists, add them here.
  # - https://hosts-file.net/grm.txt
  # - https://reddestdream.github.io/Projects/MinimalHosts/etc/MinimalHostsBlocker/minimalhosts

# whitelist -- whitelists
whitelist: {}
  # If you want to provide whitelisted domains, add them here.
  # - clients4.google.com

# blacklist -- blacklists
blacklist: {}
  # If you want to have special domains blacklisted, add them here
  # - *.blackist.com

# regex -- regexes
regex: {}
  # Add regular expression blacklist items
  # - (^|\.)facebook\.com$
